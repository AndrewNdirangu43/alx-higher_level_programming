#This is a test file for the module <2-matrix_divided.py> function <matrix_divided>

>>> matrix_div = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[2, 4, 6], [8, 10, 12]]
>>> matrix_div(matrix, 3)
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]
>>> matrix_div(matrix, 2)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
>>> matrix_div(matrix)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_div(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 43, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix2 = [[2, 4], [6, 8, 10]]
>>> matrix_div(matrix2, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 41, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix3 = [["str", 4, 6], [8, 10, 12]]
>>> matrix_div(matrix3, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 34, in matrix_divided
    raise TypeError(errMsg)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix4 = [[], []]
>>> matrix_div(matrix4, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 37, in matrix_divided
    raise TypeError(errMsg)
TypeError: matrix must be a matrix (list of lists) of integers/floats
